Day 5

Q1. Create Emp based organization structure --- Emp , Mgr , Worker
All of above classes must be in --com.app.org

1.1 Emp state--- id(int), name, deptId , basicSal(double)
Accept all of above in constructor arguments.
Behaviour ---1.  get emp details -- override toString.
2. compute net salary ---ret 0
(eg : public double computeNetSalary(){return 0;})

1.2 Mgr state  ---id,name,basicSal,deptId,perfBonus
Behaviour ----1. get mgr details :  override toString. 
2. compute net salary (formula: basic+perfBonus) -- override computeNetSalary
3. get performance bonus. --add a new method to return bonus.(getter)


1.3 Worker state  --id,name,basic,deptId,hoursWorked,hourlyRate
Behaviour--- 
1. get worker details -- :  override toString.
2.  compute net salary (formula:  = basic+(hoursWorked*hourlyRate) --override computeNetSalary
3. get hrlyRate of the worker  -- add a new method to return hourly rate of a worker.(getter)

Organize classes in inheritance  hierarchy.

Write TestOrganization in "tester" package.
Create suitable array to store organization details.
Provide following options

1. Hire Manager
2. Hire Worker  
3. Display information of all employees including net salary using single for-each loop.
10 Exit




