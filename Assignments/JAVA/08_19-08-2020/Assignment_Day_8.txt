Day 8

2.Create a customer management application along with validations. 
2.1 Customer class
state --name,email,password,dateOfBirth(java.util.Date),custType(string),reg amount(double)
Add constructor n toString.

2.2 Create custom exception class(eg : CustomerHandlingException or InvalidInputException) , as a checked exception

2.3 
Add I/P Validation rules in utils package : ValidationRules class
Add them using different public static methods(eg : validateEmail, validatePassword etc)
Must use exception delegation (throws)

1.Customer email must contain "@"  % email  should end with ".com" (Use String class methods
contains , endsWith methods)
eg : public static String validateEmail(String email) throws InvalidInputException{...}
  
2. customer type must be either SILVER or GOLD or PLATUNUM (Use String class contains method)
3. customer's birth date must be after 1st Jan 1990.
(Hint : add a static method to parse(string--->date) n validate
For validation : Use java.util.Date class : before / after methods.

4. Reg amount must be in multiples of 500.

In case of validation failures , throw your custom exception , which will be actually handled in main(...)
 of Tester class.
i.e Centralized exc handling is expected.

Tester

Supply following options
1. Register new customer
Accept customer details : name,email,password,dateOfBirth(dd-MM-yyyy pattern),custType,reg amount
Invoke validation rules.
In case of errors , show error message & application should continue.
In case of no erros , display "Customer registration successful" message.
2. Display all customer details (for-each)
3. Exit



